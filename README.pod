=head1 NAME

spm - simple password manager

=head1 SYNOPSIS

B<spm> I<COMMAND> [I<OPTION>] [I<ENTRY>|I<GROUP>]

=head1 DESCRIPTION

spm is a simple shell script which is heavily inspired and largely
compatible with pass(1). Just like pass it uses gpg2(1) to securely
store your passwords, the major difference between pass and spm is that
the latter is a lot more minimal. Furthermore, spm is written entirely
in POSIX shell. spm is a fork of tpm(1).

Adding, removing or showing a password is done by invoking spm with the
I<add>, I<del> or I<show> command respectively followed by a name.
spm will then prompt for a password or confirmation before it modifies
or shows the corresponding entry.

When using the I<show> command, globbing is allowed to avoid typing
potentially long entry paths. In case multiple entries match, spm exits
without showing any password but a warning instead.

spm simply stores everything in a directory structure where passwords
correspond to individually PGP encrypted files, optionally residing
inside nested subdirectories of arbitrary depth, where any subdirectory
can be interpreted as a (sub)group to manage large collections easily.

This allows for transparent integration with git(1) for example to keep
track of changes and/or add comments while editing passwords.

Using ln(1) entries can be symlinked to indicate multiple accounts or
users share the same passphrase or create shortcuts to frequently used
entries for example.

spm I<list> followed by a directory path, that is a group name, lists
all entries inside the specified group as well as all its subgroups.
If not name is given, all entries will be listed. Passing I<-g> as
first parameter causes it to list groups only.

spm I<help> prints information about how to use spm.

=head1 ENVIRONMENT

=over 4

=item B<PASSWORD_STORE_DIR>

The storage directory (default: ~/.spm/).

=item B<PASSWORD_STORE_KEY>

GPG key to encrypt files with (default: self).

=back

=head1 FILES

=over 4

=item I<~/.spm/>

The default storage directory.

=back

=head1 STDOUT

Prompts, entry names and passwords are written to the standard output.

=head1 STDERR

The standard error is used for diagnostic messages only.

=head1 EXIT STATUS

spm returns 1 if an error occured otherwise 0.

=head1 EXAMPLES

Create a new entry with a random password using pwgen(1):

	$ pwgen -1 | spm add system/new-user

Create a new entry called 'system/root':

	$ spm add system/root

Write your 'system/root' password to standard output:

	$ spm show system/root

Write the entry's password that matches the given pattern to standard
output:

	$ spm show em/r*t
	$ spm show root

Copy your 'system/root' password to the clipboard using xclip(1):

	$ spm show system/root | tr -d '\n' | xclip

List all entries of the group 'system':

	$ spm list system

List groups only:

	$ spm list -g

=head1 SEE ALSO

git(1), gpg2(1), ln(1), pwgen(1), tpm(1), xclip(1)
