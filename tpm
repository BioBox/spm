#!/bin/sh
# Copyright (C) 2013-2015 SÃ¶ren Tempel
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

umask 077

##
# Variables
##

GPG_OPTS="--quiet --yes --batch"
STORE_DIR="${PASSWORD_STORE_DIR:-${HOME}/.password-store}"

if [ -r "${STORE_DIR}/.gpg-id" ] && [ -z "${PASSWORD_STORE_KEY}" ]; then
  read -r PASSWORD_STORE_KEY < "${STORE_DIR}/.gpg-id"
fi

if [ -n "${PASSWORD_STORE_KEY}" ]; then
  GPG_OPTS="${GPG_OPTS} --recipient ${PASSWORD_STORE_KEY}"
else
  GPG_OPTS="${GPG_OPTS} --default-recipient-self"
fi

##
# Helper
##

abort() {
  echo "${1}" 1>&2
  exit 1
}

readpw() {
  if [ -t 0 ]; then
    printf "%s" "${1}"
    stty -echo
  fi

  IFS= read -r "${2}"
  [ -t 0 ] && stty echo
}

usage() {
  echo "USAGE: tpm show|insert|list|help [ENTRY|GROUP]"
}

list() {
  [ -d "${STORE_DIR}" ] || mkdir -p "${STORE_DIR}"

  [ -n "${1}" ] && [ ! -d "${STORE_DIR}/${1}" ] \
    && abort "The specified group doesn't exist. See 'tpm list'."

  tree --prune --noreport "${STORE_DIR}/${1}"
  echo
}

##
# Commands
##

show() {
  entry_name="${1}"
  entry_path="${STORE_DIR}/${entry_name}.gpg"

  [ -z "${entry_name}" ] && abort "USAGE: tpm show ENTRY"

  [ -e "${entry_path}" ] || abort "The requested entry doesn't exist."

  gpg2 ${GPG_OPTS} --decrypt "${entry_path}"
}

insert() {
  entry_name="${1}"
  entry_path="${STORE_DIR}/${entry_name}.gpg"

  [ -z "${entry_name}" ] && abort "USAGE: tpm insert ENTRY"

  [ -e "${entry_path}" ] \
    && abort "This entry already exists, please remove it first."

  password=""
  readpw "Password for '${entry_name}': " password
  [ -t 0 ] && printf "\n"

  [ -z "${password}" ] && abort "You didn't specify a password."

  mkdir -p "$(dirname "${entry_path}")"
  printf '%s\n' "${password}" | gpg2 ${GPG_OPTS} \
    --encrypt --output "${entry_path}"
}

##
# Parse input
##

[ $# -gt 2 ] && abort "tpm doesn't accept more than two arguments."

case "${1}" in
  "show")
    show    "${2}"
    ;;
  "insert")
    insert  "${2}"
    ;;
  "list")
    list    "${2}"
    ;;
  "help")
    usage
    ;;
  *)
    abort   "You didn't specify a valid command. See 'tpm help'."
    ;;
esac

# vim: et:sw=2:sts=2
