#!/bin/sh
# Copyright (C) 2013-2015 SÃ¶ren Tempel
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

umask 077

### Variables ###

GPG_OPTS="--quiet --yes --batch"
STORE_DIR="${PASSWORD_STORE_DIR:-${HOME}/.tpm}"

if [ -n "${PASSWORD_STORE_KEY}" ]; then
  GPG_OPTS="${GPG_OPTS} --recipient ${PASSWORD_STORE_KEY}"
else
  GPG_OPTS="${GPG_OPTS} --default-recipient-self"
fi

### Helper ###

abort() {
  echo "${1}" 1>&2
  exit 1
}

readpw() {
  if [ -t 0 ]; then
    printf "%s" "${1}"
    stty -echo
  fi

  IFS= read -r "${2}"
  [ -t 0 ] && stty echo
}

usage() {
  echo "USAGE: tpm show|insert|list|help [ENTRY|GROUP]"
}

### Commands ###

insert() {
  [ -z "${1}" ] && abort "USAGE: tpm insert ENTRY"

  [ -e "${STORE_DIR}"/"${1}".gpg ] \
    && abort "This entry already exists, please remove it first."

  password=""
  readpw "Password for '${1}': " password
  [ -t 0 ] && printf "\n"

  [ -z "${password}" ] && abort "You didn't specify a password."

  mkdir -p "$(dirname "${STORE_DIR}"/"${1}".gpg)"
  printf '%s\n' "${password}" \
    | gpg2 ${GPG_OPTS} --encrypt --output "${STORE_DIR}"/"${1}".gpg
}

list() {
  [ -d "${STORE_DIR}" ] || mkdir -p "${STORE_DIR}"

  [ -n "${1}" ] && [ ! -d "${STORE_DIR}/${1}" ] \
    && abort "The specified group doesn't exist. See 'tpm list'."

  tree --noreport -l -C -- "${STORE_DIR}/${1}" \
    | sed 's/.gpg$//g'
  echo
}

remove() {
  [ -z "${1}" ] && abort "USAGE: tpm remove ENTRY"

  [ -e "${STORE_DIR}"/"${1}".gpg ] || abort "The requested entry doesn't exist."

  rm -i "${STORE_DIR}"/"${1}".gpg && echo "${1} has been removed."
}

show() {
  [ -z "${1}" ] && abort "USAGE: tpm show ENTRY"

  [ -e "${STORE_DIR}"/"${1}".gpg ] || abort "The requested entry doesn't exist."

  gpg2 ${GPG_OPTS} --decrypt "${STORE_DIR}"/"${1}".gpg
}

### Parse input ###

[ $# -gt 2 ] && abort "tpm doesn't accept more than two arguments."

case "${1}" in
  'insert'|'list'|'remove'|'show')
    ${1}    "${2}"
    ;;
  'help')
    usage
    ;;
  *)
    abort   "You didn't specify a valid command. See 'tpm help'."
    ;;
esac

# vim: et:sw=2:sts=2
